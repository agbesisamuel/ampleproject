# Generated by Django 2.0.7 on 2018-10-01 13:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityData',
            fields=[
                ('activityid', models.AutoField(primary_key=True, serialize=False, verbose_name='Photo ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('subtitle', models.CharField(max_length=100, verbose_name='Sub Title')),
                ('image', models.ImageField(blank=True, null=True, upload_to='venues/%Y/%m/', verbose_name='Image')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
            ],
            options={
                'verbose_name_plural': 'Activities',
                'db_table': '"activitydata"',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='ApiData',
            fields=[
                ('appid', models.AutoField(primary_key=True, serialize=False, verbose_name='API Id')),
                ('apikey', models.CharField(max_length=100, verbose_name='API Key')),
                ('apVersion', models.CharField(max_length=100, verbose_name='API Version')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
            ],
            options={
                'verbose_name_plural': 'Api Key',
                'db_table': '"apidata"',
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='MenuData',
            fields=[
                ('menuid', models.AutoField(primary_key=True, serialize=False, verbose_name='Menu ID')),
                ('name', models.CharField(max_length=100, verbose_name='Menu Name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
            ],
            options={
                'verbose_name_plural': 'Menu Items',
                'db_table': '"menudata"',
                'ordering': ('menuid',),
            },
        ),
        migrations.CreateModel(
            name='Mood',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
            ],
            options={
                'verbose_name_plural': 'Mood',
                'db_table': '"mood"',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='OpenHours',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('days', models.CharField(choices=[('0', 'SUNDAY'), ('1', 'MONDAY'), ('2', 'TUESDAY'), ('3', 'WEDNESDAY'), ('4', 'THURSDAY'), ('5', 'FRIDAY'), ('6', 'SATURDAY')], max_length=10, verbose_name='Day of week')),
                ('open', models.TimeField(blank=True, verbose_name='Open time')),
                ('close', models.TimeField(blank=True, verbose_name='Closing time')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
            ],
            options={
                'verbose_name_plural': 'Opening hours',
                'db_table': '"openhours"',
                'ordering': ('venue',),
            },
        ),
        migrations.CreateModel(
            name='StartPrice',
            fields=[
                ('transid', models.AutoField(primary_key=True, serialize=False, verbose_name='Id')),
                ('start_price', models.DecimalField(blank=True, decimal_places=2, max_digits=5, verbose_name='Start Price')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_item', to='restapi.MenuData', verbose_name='Menu Item')),
            ],
            options={
                'verbose_name_plural': 'Start Price',
                'db_table': '"startprice"',
                'ordering': ('transid',),
            },
        ),
        migrations.CreateModel(
            name='TimePhase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('phase', models.CharField(max_length=100, verbose_name='Time of the day')),
                ('starttime', models.TimeField(blank=True, verbose_name='Start time')),
                ('endtime', models.TimeField(blank=True, verbose_name='End time')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
            ],
            options={
                'verbose_name_plural': 'Time Phase',
                'db_table': '"timephase"',
                'ordering': ('phase',),
            },
        ),
        migrations.CreateModel(
            name='TokenData',
            fields=[
                ('tokenid', models.AutoField(primary_key=True, serialize=False, verbose_name='Token ID')),
                ('token', models.CharField(max_length=100, verbose_name='Token')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('expiry', models.DateTimeField(verbose_name='Expiring Date')),
            ],
            options={
                'verbose_name_plural': 'Tokens',
                'db_table': '"tokendata"',
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='UseraccountData',
            fields=[
                ('userid', models.AutoField(primary_key=True, serialize=False, verbose_name='User ID')),
                ('fullname', models.CharField(max_length=50, verbose_name='Full Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email Address')),
                ('password', models.CharField(max_length=15, verbose_name='Password')),
                ('phonenumber', models.CharField(blank=True, max_length=15, verbose_name='Phone Number')),
                ('apikey', models.CharField(max_length=100, verbose_name='Api Key')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
            ],
            options={
                'verbose_name_plural': 'User Accounts',
                'db_table': '"useraccountdata"',
                'ordering': ('fullname',),
            },
        ),
        migrations.CreateModel(
            name='VenueData',
            fields=[
                ('venueid', models.AutoField(primary_key=True, serialize=False, verbose_name='Venue ID')),
                ('OSMID', models.CharField(blank=True, max_length=100, verbose_name='OSM ID')),
                ('name', models.CharField(max_length=100, verbose_name='Venue Name')),
                ('description', models.CharField(max_length=150, verbose_name='Venue Description')),
                ('loc_lat', models.CharField(max_length=20, verbose_name='Latitude')),
                ('loc_lng', models.CharField(max_length=20, verbose_name='Longitude')),
                ('streetname', models.CharField(max_length=100, verbose_name='Street Name')),
                ('streetnumber', models.CharField(max_length=10, verbose_name='Street Number')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('postcode', models.CharField(max_length=100, verbose_name='Post Code')),
                ('area', models.CharField(blank=True, max_length=100, verbose_name='Area')),
                ('capacity', models.IntegerField(verbose_name='Venue Capacity')),
                ('wheelchairavail', models.BooleanField(default=False, verbose_name='Wheel Chair Availability')),
                ('outdoorsitting', models.BooleanField(default=False, verbose_name='Outdoor Sitting')),
                ('smookingavailability', models.BooleanField(default=False, verbose_name='Smooking Availability')),
                ('micro_brewery', models.BooleanField(default=False, verbose_name='Micro Brewery')),
                ('back_image_one', models.ImageField(blank=True, null=True, upload_to='venues/%Y/%m/', verbose_name='Background Image One')),
                ('back_image_two', models.ImageField(blank=True, null=True, upload_to='venues/%Y/%m/', verbose_name='Background Image Two')),
                ('fore_image_one', models.ImageField(blank=True, null=True, upload_to='venues/%Y/%m/', verbose_name='Profile Gallery One')),
                ('fore_image_two', models.ImageField(blank=True, null=True, upload_to='venues/%Y/%m/', verbose_name='Profile Gallery Two')),
                ('website', models.CharField(blank=True, max_length=200, null=True, verbose_name='Website Address')),
                ('managername', models.CharField(blank=True, max_length=25500, null=True, verbose_name="Managers' Name")),
                ('phonenumber', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('hits', models.IntegerField(default=0, verbose_name='Hits')),
                ('verified', models.BooleanField(default=False, verbose_name='Verified by Administrator')),
                ('note_to_admin', models.TextField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('activities', models.ManyToManyField(blank=True, help_text='Select activities for this Venue', to='restapi.ActivityData')),
            ],
            options={
                'verbose_name_plural': 'Venues',
                'db_table': '"venuedata"',
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='VenueTypeData',
            fields=[
                ('venuetypeid', models.AutoField(primary_key=True, serialize=False, verbose_name='Venue type ID')),
                ('description', models.CharField(max_length=100, verbose_name='Description')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
            ],
            options={
                'verbose_name_plural': 'Venue Type',
                'db_table': '"venuetypedata"',
                'ordering': ('description',),
            },
        ),
        migrations.AddField(
            model_name='venuedata',
            name='type',
            field=models.ManyToManyField(help_text='Select venue type', to='restapi.VenueTypeData'),
        ),
        migrations.AddField(
            model_name='tokendata',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.UseraccountData'),
        ),
        migrations.AddField(
            model_name='startprice',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='venue_start_price', to='restapi.VenueData'),
        ),
        migrations.AddField(
            model_name='openhours',
            name='venue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='venue_opening_periods', to='restapi.VenueData', verbose_name='Venue'),
        ),
        migrations.AddField(
            model_name='mood',
            name='phase',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='restapi.TimePhase', verbose_name='Phase'),
        ),
        migrations.AddField(
            model_name='mood',
            name='venue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='venue_moods', to='restapi.VenueData', verbose_name='Venue'),
        ),
    ]
